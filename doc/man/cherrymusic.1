.\" Manpage for CherryMusic.
.\" Contact us on github.com/devsnd/cherrymusic to correct errors or typos.

.TH "CHERRYMUSIC" "1" "2013\-02\-10" "CherryMusic devel branch" "CherryMusic man page"

.SH "NAME"
cherrymusic \- a standalone HTML5 (with Flash fallback) music streaming server written in Python

.SH "SYNOPSIS"
cherrymusic [OPTIONS]

.SH "DESCRIPTION"
CherryMusic is a standalone music streaming server based on CherryPy and jPlayer. It is intended to be a personal alternative to Last.fm, Spotify, Grooveshark... you name it. 

.SH "OPTIONS"
.IP "\fB\-h, \-\-help\fP"
Show a help message and exit.

.IP "\fB\-\-update [PATH [PATH ...]]\fP"
Update the media database. PATH must start with basedir or be relative to basedir.

.IP "\fB\-\-newconfig\fP"
Creates a new config file in your home directory, e.g. "~/.config/cherrymusic/cherrymusic.conf.new".

.IP "\fB\-\-dropfiledb\fP"
Clears the file database. This might be necessary after a version jump.

.IP "\fB\-\-download\-stagger\fP"
Downloads the Python module "stagger" \-\- an ID3-tag library \-\- into the directory that also contains CherryMusic. It is used for indexing your music collection more precisely. IMPORTANT: This should only be used when CherryMusic was not installed via your system's package management!

.IP "\fB\-\-setup\fP"
If invoked with this switch, CherryMusic will walk you through the basic configuration setup in your browser on first startup. Use this if you just want to get things running without going through the configuration file yourself. CherryMusic will ask you about the most important options and configure everything for you. Note that if you want to enable more advanced features, you still need to edit the configuration file yourself. Please see \fBcherrymusic.conf\fP(5).

.IP "\fB\-\-port PORT\fP"
Overrides the port specified in \fBcherrymusic.conf\fP(5).

.SH "FILES"
According to XDG Base Directory Specification, CherryMusic honors $XDG_DATA_HOME and $XDG_CONFIG_HOME. If these variables are empty or not set, files are stored using the standard path:

~/.config/cherrymusic/cherrymusic.conf
.PP
~/.local/share/cherrymusic

.SH "SEE ALSO"
\fBcherrymusic.conf\fP(5), \fBcherrymusicd\fP(8)

.SH "BUGS"
On client:
.PP
CherryMusic might not work when Flashblock is enabled. Workaround: add the server ip to your Flashblock whitelist.

Currently, ogg files are not played in the Midori web browser. Since Midori falsely reports mp3 support, a workaround was added that relies on the Flash fallback to play mp3 files. Using Flash, there is no ogg support. This, however, is not a problem with CherryMusic, but with Midori and needs to be fixed upstream.

On server:
.PP
Currently there is a bug in CherryPy \-\- the server framework CherryMusic was built upon \-\- that prevents serving files that have non\-ASCII characters in their name. A bug report with a description of a workaround has already been filed upstream and I hope it will be resolved soon.

You've found another bug in CherryMusic? That's awesome. Tell us about it! You can open an issue in the issue tracker of our github project page (github.com/devsnd/cherrymusic/issues) and we'll take care of it.

.SH "THANKS"
To:
.PP
.IP o
The CherryPy team for a great application server
.IP o
HappyWorm for the HTML5 audio playback
.IP o
Christian Maximilian Blasius for the logo
.IP o
Bootstrap
.IP o
6arms1leg for maintaining the AUR package for Arch Linux and creating this man page
.IP o
Adrian Sampson for audioread

.SH "AUTHORS"
CherryMusic was created by Tom Wallroth and is currently developed together with Tilman BÃ¶rner.

.SH "COPYRIGHT"
GNU GENERAL PUBLIC LICENSE - Version 3, 29 June 2007
